// <auto-generated />
using System;
using EcoEnergy_GS.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;

#nullable disable

namespace EcoEnergy_GS.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EcoEnergy_GS.Models.ConsumoEnergiaModel", b =>
                {
                    b.Property<int>("Id_consumo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_consumo"));

                    b.Property<int>("Consumo")
                        .HasColumnType("NUMBER(10)");

                    b.Property<DateTime>("Data")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<int>("Id_residencia")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("Id_residencia");

                    b.HasKey("Id_consumo");

                    b.HasIndex("Id_residencia");

                    b.ToTable("Consumo_Energia");
                });

            modelBuilder.Entity("EcoEnergy_GS.Models.EnderecoModel", b =>
                {
                    b.Property<int>("Id_endereco")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_endereco"));

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Complemento")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)");

                    b.Property<int>("Numero")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("Rua")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)");

                    b.HasKey("Id_endereco");

                    b.ToTable("Endereco");
                });

            modelBuilder.Entity("EcoEnergy_GS.Models.HistoricoPontosModel", b =>
                {
                    b.Property<int>("Id_historico")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_historico"));

                    b.Property<DateTime>("Data")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<int>("Id_usuario")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("Id_usuario");

                    b.Property<int>("Quantidade")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("Id_historico");

                    b.HasIndex("Id_usuario");

                    b.ToTable("Historico_Pontos");
                });

            modelBuilder.Entity("EcoEnergy_GS.Models.RecompensasModel", b =>
                {
                    b.Property<int>("Id_recompensas")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_recompensas"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)");

                    b.Property<int>("Pontos_necessarios")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("Id_recompensas");

                    b.ToTable("Recompensas");
                });

            modelBuilder.Entity("EcoEnergy_GS.Models.ResidenciaModel", b =>
                {
                    b.Property<int>("Id_residencia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_residencia"));

                    b.Property<string>("Dispotivico_monitoramento")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)");

                    b.Property<int>("Id_eletrodomestico")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("Id_eletrodomestico");

                    b.Property<int>("Id_endereco")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("Id_endereco");

                    b.Property<int>("Id_usuario")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("Id_usuario");

                    b.Property<double>("Media_consumo")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<int>("Quantidade_pessoas")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("Id_residencia");

                    b.HasIndex("Id_eletrodomestico");

                    b.HasIndex("Id_endereco");

                    b.HasIndex("Id_usuario");

                    b.ToTable("Residencia");
                });

            modelBuilder.Entity("EcoEnergy_GS.Models.TipoEletrodomesticoModel", b =>
                {
                    b.Property<int>("Id_eletrodomestico")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_eletrodomestico"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)");

                    b.Property<int>("Quantidade")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("Id_eletrodomestico");

                    b.ToTable("Tipo_Eletrodomestico");
                });

            modelBuilder.Entity("EcoEnergy_GS.Models.TrocasRecompensasModel", b =>
                {
                    b.Property<int>("Id_trocas")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_trocas"));

                    b.Property<DateTime>("DataTroca")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<int>("Id_recompensas")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("Id_recompensas");

                    b.Property<int>("Id_usuario")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("Id_usuario");

                    b.Property<int>("Pontos_utilizados")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("Id_trocas");

                    b.HasIndex("Id_recompensas");

                    b.HasIndex("Id_usuario");

                    b.ToTable("Trocas_recompensas");
                });

            modelBuilder.Entity("EcoEnergy_GS.Models.UsuarioModel", b =>
                {
                    b.Property<int>("Id_usuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_usuario"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)");

                    b.Property<int>("Pontos")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR2(20)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("Id_usuario");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("EcoEnergy_GS.Models.ConsumoEnergiaModel", b =>
                {
                    b.HasOne("EcoEnergy_GS.Models.ResidenciaModel", "Residencia")
                        .WithMany("ConsumoEnergia")
                        .HasForeignKey("Id_residencia")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Residencia");
                });

            modelBuilder.Entity("EcoEnergy_GS.Models.HistoricoPontosModel", b =>
                {
                    b.HasOne("EcoEnergy_GS.Models.UsuarioModel", "Usuario")
                        .WithMany("HistoricoPontos")
                        .HasForeignKey("Id_usuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("EcoEnergy_GS.Models.ResidenciaModel", b =>
                {
                    b.HasOne("EcoEnergy_GS.Models.TipoEletrodomesticoModel", "TipoEletrodomestico")
                        .WithMany("Residencia")
                        .HasForeignKey("Id_eletrodomestico")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EcoEnergy_GS.Models.EnderecoModel", "Endereco")
                        .WithMany("Residencia")
                        .HasForeignKey("Id_endereco")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EcoEnergy_GS.Models.UsuarioModel", "Usuario")
                        .WithMany("Residencia")
                        .HasForeignKey("Id_usuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Endereco");

                    b.Navigation("TipoEletrodomestico");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("EcoEnergy_GS.Models.TrocasRecompensasModel", b =>
                {
                    b.HasOne("EcoEnergy_GS.Models.RecompensasModel", "Recompensas")
                        .WithMany("Trocas")
                        .HasForeignKey("Id_recompensas")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EcoEnergy_GS.Models.UsuarioModel", "Usuario")
                        .WithMany("Trocas")
                        .HasForeignKey("Id_usuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Recompensas");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("EcoEnergy_GS.Models.EnderecoModel", b =>
                {
                    b.Navigation("Residencia");
                });

            modelBuilder.Entity("EcoEnergy_GS.Models.RecompensasModel", b =>
                {
                    b.Navigation("Trocas");
                });

            modelBuilder.Entity("EcoEnergy_GS.Models.ResidenciaModel", b =>
                {
                    b.Navigation("ConsumoEnergia");
                });

            modelBuilder.Entity("EcoEnergy_GS.Models.TipoEletrodomesticoModel", b =>
                {
                    b.Navigation("Residencia");
                });

            modelBuilder.Entity("EcoEnergy_GS.Models.UsuarioModel", b =>
                {
                    b.Navigation("HistoricoPontos");

                    b.Navigation("Residencia");

                    b.Navigation("Trocas");
                });
#pragma warning restore 612, 618
        }
    }
}
